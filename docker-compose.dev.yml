# Docker Development Configuration
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: cryptotradeninja-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: cryptotradeninja
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Dek.09041976
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - cryptotradeninja-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cryptotradeninja"]
      interval: 10s
      timeout: 5s
      retries: 5

  # CryptoTradeNinja Development Application
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: cryptotradeninja-app-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      WS_PORT: 3001
      DATABASE_URL: postgresql://postgres:Dek.09041976@postgres:5432/cryptotradeninja
      JWT_SECRET: your-jwt-secret-key-change-in-production
      ENCRYPTION_KEY: your-encryption-key-change-in-production
      ALLOWED_ORIGINS: http://localhost:5000,http://localhost:3000,http://127.0.0.1:5000
    ports:
      - "5000:5000"
      - "3001:3001"
      - "3000:3000"  # Vite dev server
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cryptotradeninja-dev-network
    volumes:
      - .:/app
      - node_modules:/app/node_modules
      - app_dev_logs:/app/logs
    command: npm run dev

  # Redis (for session storage and caching)
  redis:
    image: redis:7-alpine
    container_name: cryptotradeninja-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - cryptotradeninja-dev-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  app_dev_logs:
    driver: local
  node_modules:
    driver: local

networks:
  cryptotradeninja-dev-network:
    driver: bridge
